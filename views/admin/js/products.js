function ProductEditor(delete_url, edit_url, get_url) {		this.getDataOfProduct = function(answer) {		//getById('modalCont').innerHTML = answer;		ans = JSON.parse(answer);		var photos = ans.photos;		answer = '';		answer += '<div class="modal-inner"><form name="editProduct" class="form admin-form modal-form" action="" method="post" enctype="multipart/form-data">';		//answer += '<div class="row"><strong>Производитель</strong><br><div class="col-2" style="float: right; text-align: right;" onclick="modalWindow.unset();"><a class="button primary">' + 'Закрыть' + '</a></div><div class="col-10"><div class="col-8"><div class="circle small-circle"><img id="manufLogo" src="/' + ans['manufacturerLogo'] + '"></div><input value="'+ans['manufacturerName']+'" class="text-input text-input-main short-input" placeholder="" name="manufacturer" required type="text" style="margin: 9px 0 0 9px;"></div><div class="col-4 answer-place" id="answerPlaceManufacturerModal"></div></div></div>';		answer += '<div class="row"><div class="col-2" style="float: right; text-align: right;" onclick="modalWindow.unset();"><a class="button primary">' + 'Закрыть' + '</a></div></div>';		answer += '<div class="row"><div class="col-12"><strong>Название продукта</strong><br><input value=\'' + ans.name + '\' type="text" name="name" required class="text-input text-input-main short-input"></div></div>';		answer += '<div class="row"><div class="col-6"><strong>Категория</strong></br><input type="text" name="category" class="text-input text-input-main short-input" required value="'+ans.categoryName+'"></div><div class="col-6 answer-place" id="answerPlaceCategoryModal"></div></div>';		answer += '<div class="row"><div><strong>Стоимость</strong><br><div class="div-shell"><input type="text" name="price" value="'+ans.price+'" class="text-input text-input-main" style="width: 250px;">рублей</div></div></div>';		answer += '<div class="row"><div class="col-4 form-element"><strong>Комбинации стоимостей и параметров</strong><br><textarea placeholder="500 ! 25см  ! 300г&#10;1000 ! 40см  ! 600г" name="prices" maxlength="2000" class="text-input text-input-main" rows="3" wrap="soft">' + ans.prices + '</textarea></div></div>';		//answer += '<div class="row"><div><strong>Количество</strong><br><input type="text" name="quantity" value="'+ans.quantity+'" class="text-input text-input-main short-input"></div></div>';		answer += '<div class="row"><div><strong>Вес</strong><br><input type="text" name="weight" value="' + ans.weight + '" class="text-input text-input-main short-input"></div></div>';		var counter = 0;		answer += '<div class="row">';		for (var i = 0; i < 20; i++) {			if (typeof ans.photos[i] !== 'undefined') {				answer += '<div class="floating-block" id="'+ans.photos[i]+'"><img class="product-image" onclick="imageZoom(event.target)" src="/' + ans.photos[i] + '"><br>';				answer += '<label class="uploadbutton" style="cursor: pointer;"><div class="button" >Выбрать</div><div class="input">Замените фото другим</div><input type="file" onchange="this.previousSibling.innerHTML = this.value" name="productPhoto[]" accept="image/jpeg,image/png"></label><br><div class="dbutton error" onclick="deleteItemPhoto(' + ans.id + ', \''+ ans.photos[i] +'\');">Удалить</div></div>';				counter = counter + 1;			}		}		answer += '</div>';		counter = 20 - counter;				if (counter > 0) {			answer += '<div class="row"><strong>Загрузите фотографии продукта (нажмите на поле или просто перетащите в него)</strong><br><label class="uploadbutton" style="cursor: pointer;"><div class="button" >Выбрать</div><div class="input">Выберите фото, не более '+counter+'</div><input id="photos" type="file" multiple onchange="this.previousSibling.innerHTML = this.value;addMoreInput(this);" name="productPhotoNew[]" accept="image/jpeg,image/png"></label><br><output id="list"></output></div>';		}		answer += '<div class="row"><div class="col-12 form-element"><strong>Описание</strong><br><textarea name="description" maxlength="2000" class="text-input text-input-main" rows="8" wrap="hard">' + ans.description + '</textarea></div></div>';		answer += '<div class="row"><div class="col-12 form-element"><strong>Состав и информация</strong><br><textarea name="composition" maxlength="2000" class="text-input text-input-main" rows="8">' + ans.composition + '</textarea></div></div>';		if (ans.status == "visible") {			answer += '<div class="row"><div class="col-12 form-element"><strong>Статус</strong><br><input type="radio" checked name="status" id="status1" value="visible"/><label for="status1">Видим</label><br><input type="radio" name="status" id="status2" value="hidden"/><label for="status2">Скрыт</label></div></div>';		} else {			answer += '<div class="row"><div class="col-12 form-element"><strong>Статус</strong><br><input type="radio" name="status" id="status1" value="visible"/><label for="status1">Видим</label><br><input type="radio" checked name="status" id="status2" value="hidden"/><label for="status2">Скрыт</label></div></div>';		}		if (typeof ans.creatorName !== 'undefined') {			answer += '<div class="row"><div><h3>Создал</h3> ' + ans.creatorName + ' ' + ans.creatorSurname + '</div></div>';		}		answer += '<div class="row"><div><h3>Изменено</h3> ' + ans.datetime + '</div></div>';		answer += '<input name="id" readonly required value="'+ans.id+'" style="display: none;">';		answer += '<input name="" value="Готово" class="button real-button primary" type="submit"></form></div>';		modalWindow.content(answer);		document.forms.editProduct.action = productChangeAction + '/' + ans.id;		new GetDataOnKeyUp(document.forms.editProduct.manufacturer, url + 'admin/manufacturerChooser', choseManuf);		new GetDataOnKeyUp(document.forms.editProduct.category, url + 'admin/categoryChooser', choseCat);		new InputShell(document.forms.editProduct.price);		new NumbersInput(document.forms.editProduct.price);		function handleFileSelect(evt) {			document.getElementById('list').innerHTML = '';		    var files = evt.target.files; // FileList object		    // Loop through the FileList and render image files as thumbnails.		    for (var i = 0, f; f = files[i]; i++) {		      // Only process image files.		      if (!f.type.match('image.*')) {		        continue;		      }		      var reader = new FileReader();		      // Closure to capture the file information.		      reader.onload = (function(theFile) {		        return function(e) {		          // Render thumbnail.		          var span = document.createElement('span');		          span.innerHTML = ['<img class="thumb" src="', e.target.result,		                            '" title="', escape(theFile.name), '"/>'].join('');		          document.getElementById('list').insertBefore(span, null);		        };		      })(f);		      // Read in the image file as a data URL.		      reader.readAsDataURL(f);		    }		    getById('photos').previousSibling.innerHTML = 'Выбрано ' + i + ' файлов';		}		document.getElementById('photos').addEventListener('change', handleFileSelect, false);	}	this.edit = function(id, change) {		var toInsert = '';		getData(id, get_url, product.getDataOfProduct);		modalWindow.set(id, change);	}	this.delete = function(id) {		var conf = confirm("Вы точно хотите удалить данный продукт?");		if (!conf) return;		if (typeof id != undefined) {		    var xhr = getXmlHttp();			xhr.onload = xhr.onerror = function() {		        if (this.readyState == 4 && this.status == 200) {		           	var answer = xhr.responseText;		            answerController(answer, id);		        } else {					error('Ошибка соединения с сервером');		        }			      	        }		       				    var formData = new FormData();		    formData.append('id', id);		   	xhr.open("POST", delete_url, true);		   	xhr.send(formData);		} else {			error('Ошибка, перезагрузите страницу и попробуйте ещё раз!');		}	}	function answerController(answer, id) {		if (answer == 'success') {			var id = 'product_' + id;			getById(id).parentNode.removeChild(getById(id));			notify('Успешно!', 'success');		} else if (answer == 'alreadyDeleted') {			notify('Данный продукт уже удалён', 'error');		} else if (answer == 'accessDenied') {			notify('Доступ запрещён!', 'error');		} else if (answer == 'error') {			notify('Ошибка, перезагрузите страницу и попробуйте ещё раз!', 'error');		} else {			notify(answer, 'error');		}	}}var loadProducts = function(answer) {	var ans = JSON.parse(answer);	var answer = '<div class="table-row theader"><div class="table-id">ID</div><div class="table-name">Название</div><!--<div class="table-manufacturer">Производитель</div>--><div class="table-category">Категория</div><div class="table-price">Цена</div><!--<div class="table-quantity">Количество</div>--><div class="table-text">Вес</div><div class="table-logo">Фото</div><div class="table-text">Состав и информация</div><div class="table-text">Описание</div><div class="table-creator">Создатель</div><div class="table-date">Изменено</div><div class="table-action">Действие</div></div>';	var i = 0;	for (i = 0; i < ans.i; i++) {		if (ans.composition[i] == '') ans.composition[i] = '—';		if (ans.description[i] == '') ans.description[i] = '—';		if (ans.weight[i] == '') ans.weight[i] = '—';		answer += '<div class="table-row" id="product_' + ans.id[i] + '">';		answer += '<div class="table-id">' + ans.id[i] + '</div>';		answer += '<div class="table-name">' + ans.name[i] + '</div>';		//answer += '<div class="table-manufacturer">' + ans.manufacturer[i] + ' ' + ans.manufacturer_id[i] + '</div>';		answer += '<div class="table-category">' + ans.category[i] + ' ' + ans.category_id[i] + '</div>';		answer += '<div class="table-price">' + ans.price[i] + '</div>';		//answer += '<div class="table-quantity">' + ans.quantity[i] + '</div>';		answer += '<div class="table-text">' + ans.weight[i] + '</div>';		answer += '<div class="table-logo">';		var product_photos = ans.photos[i];		if (typeof product_photos[0] != 'undefined') {			for (var j = 0; j < product_photos.length; j++) {				answer += '<img class="product-image-in-table" onclick="imageZoom(event.target)" src="/' + product_photos[j] + '">';			}		} else answer += '—';		answer += '</div>';		answer += '<div class="table-text">' + pruning(ans.composition[i]) + '</div>';		answer += '<div class="table-text">' + pruning(ans.description[i]) + '</div>';		answer += '<div class="table-creator">' + ans.creator[i] + '</div>';		answer += '<div class="table-date">' + ans.date[i] + '</div>';		answer += '<div class="table-action"><div onclick="product.edit(' + ans.id[i] + ');" class="control-form">Редактировать</div><br><div onclick="product.delete(' + ans.id[i] + ');" class="control-form delete">Удалить</div></div>';		answer += '</div>'	}	if (i == 0) {		if (ans.byWhat == 'byCat') {			if (ans.sessionRole == 'admin') {				answer = '<div class="table-container" id="table-container">Вы пока не добавили товара из этой категории!</div>';			} else if (ans.sessionRole == 'owner') {				answer = '<div class="table-container" id="table-container">В этой категории ещё не добавлено товаров </div>';			}		}		if (ans.byWhat == 'byManuf') {			if (ans.sessionRole == 'admin') {				answer = '<div class="table-container" id="table-container">Вы пока не добавили товара этого производителя!</div>';			} else if (ans.sessionRole == 'owner') {				answer = '<div class="table-container" id="table-container">У этого производителя ещё не добавлено товаров </div>';			}		}	}	getById('products-table').innerHTML = answer;}function pruning(str) {	if (str.length > 100) {		return str.slice(0, 100) + '...'	} else {		return str;	}}var choseManuf = function (answer) {	var ans = JSON.parse(answer);	var answer = 'Выберите из предложенных:<br>';	var i = 0;	for (i = 0; i < ans.i; i++) {	   	answer += '<div class="variant-buble buble" onclick="deliverInInput(document.forms.editProduct.manufacturer, \'manufacturerVariant_'+ ans.id[i] +'\');changeLogo(\'' + ans.logo[i] + '\');" id="manufacturerVariant_'+ ans.id[i] +'">'+ans.name[i]+'</div>';	}	if (i == 0) {	   	answer = 'Ничего не найдено, попробуйте ввести другой запрос!';	}	getById('answerPlaceManufacturerModal').innerHTML = answer;}var choseCat = function (answer) {	var ans = JSON.parse(answer);	var answer = 'Выберите из предложенных:<br>';	var i = 0;	for (i = 0; i < ans.i; i++) {	   	answer += '<div class="variant-buble buble" onclick="deliverInInput(document.forms.editProduct.category, \'categoryVariant_'+ ans.id[i] +'\')" id="categoryVariant_'+ ans.id[i] +'">'+ans.name[i]+'</div>';	}	if (i == 0) {	   	answer = 'Ничего не найдено, попробуйте ввести другой запрос!';	    }	getById('answerPlaceCategoryModal').innerHTML = answer;}function changeLogo(logo_src) {	getById('manufLogo').src = logo_src;}function deleteItemPhoto(itemId, photoUrl) {	var formData = new FormData();	formData.append("itemId", itemId);	formData.append("photoUrl", photoUrl);	sendData(formData, url + 'admin/deleteItemPhoto', deleteItemPhotoResult);}var deleteItemPhotoResult = function(answer) {	ans = JSON.parse(answer);	if (ans.answer == 'good') {		notify('Успешно', 'success');		getById(ans.url).parentNode.removeChild(getById(ans.url));	} else if (ans.answer == 'empty') {		notify('Ошибка при получении данных', 'error');	} else if (ans.answer == 'nonePhoto') {		notify('Не найдено данного фото', 'error');	} else if (ans.answer == 'none') {		notify('Данного продукта не найдено', 'error');	}}